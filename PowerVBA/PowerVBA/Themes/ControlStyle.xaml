<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:c="clr-namespace:PowerVBA.Controls.Customize"
    xmlns:cm="clr-namespace:PowerVBA.Commands"
    xmlns:corec="clr-namespace:PowerVBA.Core.Controls;assembly=PowerVBA.Core"
    xmlns:h="clr-namespace:PowerVBA.Controls.Helper"
    xmlns:shell="http://schemas.microsoft.com/winfx/2006/xaml/presentation/shell"
    xmlns:w="clr-namespace:PowerVBA.Windows">


    <StreamGeometry x:Key="EndPath">M2.1884144,33.948415C0.17737393,31.937374 0.11539951,31.753666 0.91285887,30.167338 1.3738599,29.250302 3.9220578,26.346334 6.575521,23.714076 9.2289843,21.081818 11.4,18.510484 11.4,18 11.4,17.489516 9.2289843,14.918182 6.575521,12.285924 3.9220578,9.6536658 1.3918621,6.7857846 0.95286405,5.9128546 0.24157448,4.498484 0.29322573,4.1671555 1.4273428,2.8692044 4.4345855,-0.57246332 4.2114413,-0.64568514 11.079512,6.0364362L17.399999,12.1858 23.720487,6.0364362C30.588558,-0.64568514 30.365414,-0.57246332 33.372656,2.8692044 34.506773,4.1671555 34.558425,4.498484 33.847135,5.9128546 33.408137,6.7857846 30.877941,9.6536658 28.224478,12.285924 25.571015,14.918182 23.399999,17.489516 23.399999,18 23.399999,18.510484 25.571015,21.081818 28.224478,23.714076 30.877941,26.346334 33.408137,29.214215 33.847135,30.087145 34.558425,31.501516 34.506773,31.832845 33.372656,33.130796 30.364772,36.573197 30.590558,36.647632 23.697503,29.941202L17.354032,23.769477 11.827016,29.172463C4.0647851,36.760504,4.6904735,36.450473,2.1884144,33.948415z</StreamGeometry>
    <StreamGeometry x:Key="HelpPath">m 7.2 32.099999 0 -2.7 4.8 0 4.8 0 0 2.7 0 2.7 -4.8 0 -4.8 0 0 -2.7 z m 0 -10.8 c 0 -2.685714 0.011112 -2.7 2.1 -2.7 2.05 0 2.1 -0.05714 2.1 -2.399999 0 -2.16 0.15 -2.4 1.5 -2.4 1.418182 0 1.5 -0.18 1.5 -3.3 l 0 -3.3000002 -3.9 0 -3.9 0 0 1.7999999 C 6.6 10.781818 6.566664 10.8 3.3 10.8 L 0 10.8 0 7.1999998 C 0 3.7599999 0.06666667 3.5999999 1.5 3.5999999 c 1.2666667 0 1.5 -0.28 1.5 -1.8 L 3 0 l 8.7 0 8.7 0 0 1.7999999 c 0 1.52 0.233333 1.8 1.5 1.8 1.494737 0 1.5 0.02 1.5 5.6999998 C 23.4 14.599999 23.315789 15 22.2 15 21.266666 15 21 15.4 21 16.8 c 0 1.657142 -0.166667 1.799999 -2.1 1.799999 -2.088889 0 -2.1 0.01429 -2.1 2.7 l 0 2.7 -4.8 0 -4.8 0 0 -2.7 z</StreamGeometry>
    <StreamGeometry x:Key="RestorePath">M 0 22.500001 0 10.8 l 3.3000001 0 3.3000001 0 0 -5.3999998 0 -5.4000002 13.8000008 0 13.8 0 0 12 0 12.000001 -3.6 0 -3.6 0 0 5.1 0 5.1 -13.500001 0 -13.5 0 0 -11.7 z m 24.600001 1.5 0 -7.200001 -10.800001 0 -10.7999999 0 0 7.200001 0 7.2 10.7999999 0 10.800001 0 0 -7.2 z m 6.6 -10.500001 0 -7.4999998 -10.8 0 -10.8000007 0 0 2.4 0 2.3999998 8.7000007 0 8.7 0 0 5.1 0 5.100001 2.1 0 2.1 0 0 -7.500001 z</StreamGeometry>
    <StreamGeometry x:Key="MaximizePath">M 0 18.899999 0 0 l 18 0 18 0 0 18.899999 0 18.9 -18 0 -18 0 0 -18.9 z m 32.4 2.7 0 -11.9999993 -14.1 0 -14.1 0 0 11.9999993 0 12 14.1 0 14.1 0 0 -12 z</StreamGeometry>
    <StreamGeometry x:Key="MiniMizePath">m 0.06767899 3.0676788 0 -2.99999996 15.60000101 0 15.6 0 0 2.99999996 0 3 -15.6 0 -15.60000101 0 0 -3 z</StreamGeometry>


    <!--#region [  ChromeWindow Style  ]-->
    <Style x:Key="ChromeWindowStyle" TargetType="{x:Type w:ChromeWindow}">
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome
                    x:Name="WdwChrome"
                    CaptionHeight="32"
                    CornerRadius="0"
                    GlassFrameThickness="1"
                    ResizeBorderThickness="5" />
            </Setter.Value>

        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type w:ChromeWindow}">

                    <Grid
                        x:Name="ContentGrid"
                        Margin="3"
                        Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="28" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Grid.Effect>
                            <DropShadowEffect Direction="230" ShadowDepth="0" />
                        </Grid.Effect>

                        <ContentPresenter
                            x:Name="contentPresenter"
                            Grid.Row="1"
                            Margin="1"
                            Content="{TemplateBinding Content}" />

                        <Grid x:Name="TitleGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                                <ColumnDefinition x:Name="commandWidth" Width="120" />
                            </Grid.ColumnDefinitions>

                            <Image
                                x:Name="LogoImg"
                                Margin="3"
                                IsHitTestVisible="False"
                                Source="{TemplateBinding Icon}"/>
                            <TextBlock
                                x:Name="TitleTB"
                                Grid.Column="1"
                                Margin="5,0"
                                VerticalAlignment="Center"
                                IsHitTestVisible="False"
                                Text="{TemplateBinding Title}"
                                TextAlignment="Center" />

                            <Grid Grid.Column="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition x:Name="maximizeWidth"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <corec:PathButton
                                    x:Name="HelpButt"
                                    Grid.Column="0"
                                    
                                    ContentWidth="6"
                                    ContentHeight="9"
                                    
                                    ContentVerticalAlignment="Center"
                                    ContentHorizontalAlignment="Center"
                                    
                                    Background="Transparent"
                                    Fill="DimGray"
                                    
                                    UseMouseOverFill="True"
                                    MouseOverFill="#FFEF5A35"
                                    
                                    UseMouseOverBackground="True"
                                    MouseOverBackground="#FFFCE4DC"
                                    shell:WindowChrome.IsHitTestVisibleInChrome="true"
                                    
                                    Command="{x:Static cm:WindowSystemCommand.HelpCommand}"
                                    Data="{StaticResource HelpPath}"
                                    />
                                <corec:PathButton
                                    x:Name="MiniButt"
                                    Grid.Column="1"
                                    
                                    ContentWidth="9"
                                    ContentHeight="2"
                                    
                                    ContentVerticalAlignment="Center"
                                    ContentHorizontalAlignment="Center"
                                    
                                    ContentMargin="0,5,0,0"
                                    
                                    Background="Transparent"
                                    Fill="DimGray"
                                    
                                    UseMouseOverFill="True"
                                    MouseOverFill="#FFEF5A35"
                                    
                                    UseMouseOverBackground="True"
                                    MouseOverBackground="#FFFCE4DC"
                                    
                                    shell:WindowChrome.IsHitTestVisibleInChrome="true"
                                    
                                    Command="{x:Static cm:WindowSystemCommand.MinimizeCommand}"
                                    Data="{StaticResource MiniMizePath}" />
                                <corec:PathButton
                                    x:Name="RestoreButt"
                                    Grid.Column="2"
                                    
                                    ContentWidth="10"
                                    ContentHeight="10"
                                    
                                    ContentVerticalAlignment="Center"
                                    ContentHorizontalAlignment="Center"
                                    
                                    Background="Transparent"
                                    Fill="DimGray"
                                    
                                    UseMouseOverFill="True"
                                    MouseOverFill="#FFEF5A35"
                                    
                                    UseMouseOverBackground="True"
                                    MouseOverBackground="#FFFCE4DC"
                                    
                                    shell:WindowChrome.IsHitTestVisibleInChrome="true"
                                    
                                    Command="{x:Static cm:WindowSystemCommand.RestoreCommand}"
                                    Data="{StaticResource MaximizePath}"/>
                                <corec:PathButton
                                    x:Name="EndButt"
                                    Grid.Column="3"
                                    
                                    ContentWidth="10"
                                    ContentHeight="10"
                                    
                                    ContentVerticalAlignment="Center"
                                    ContentHorizontalAlignment="Center"
                                    
                                    Background="Transparent"
                                    Fill="DimGray"
                                    
                                    UseMouseOverFill="True"
                                    MouseOverFill="#FFEF5A35"
                                    
                                    UseMouseOverBackground="True"
                                    MouseOverBackground="#FFFCE4DC"
                                    
                                    shell:WindowChrome.IsHitTestVisibleInChrome="true"
                                    
                                    Command="{x:Static cm:WindowSystemCommand.CloseCommand}"
                                    Data="{StaticResource EndPath}" />
                            </Grid>
                        </Grid>
                        <Border
                            Grid.RowSpan="2"
                            BorderBrush="#FFD24726"
                            BorderThickness="1"
                            IsHitTestVisible="False" />

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="ContentGrid" Property="Margin" Value="0" />
                            <Setter TargetName="RestoreButt" Property="Data" Value="{StaticResource RestorePath}" />
                        </Trigger>

                        <Trigger Property="ResizeMode" Value="NoResize">
                            <Setter TargetName="RestoreButt" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="commandWidth" Property="Width" Value="90"/>
                            <Setter TargetName="maximizeWidth" Property="Width" Value="0"/>
                        </Trigger>

                        <Trigger Property="HelpVisible" Value="False">
                            <Setter TargetName="HelpButt" Property="Visibility" Value="Hidden"/>
                        </Trigger>

                        <Trigger Property="NoTitle" Value="True">
                            <Setter TargetName="contentPresenter" Property="Grid.Row" Value="0" />
                            <Setter TargetName="contentPresenter" Property="Grid.RowSpan" Value="2" />
                            <Setter TargetName="LogoImg" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="TitleTB" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region [  PathButton Style  ]-->
    <Style x:Name="PathButtonStyle" TargetType="{x:Type corec:PathButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type corec:PathButton}">
                    <Grid Background="Transparent">
                        <Border x:Name="border" Background="{TemplateBinding Background}" IsHitTestVisible="False">
                            <Path x:Name="pth" Data="{TemplateBinding Data}"
                                  Fill="{TemplateBinding Fill}"
                                  Width="{TemplateBinding ContentWidth}"
                                  Height="{TemplateBinding ContentHeight}"
                                  VerticalAlignment="{TemplateBinding ContentVerticalAlignment}"
                                  HorizontalAlignment="{TemplateBinding ContentHorizontalAlignment}"
                                  Margin="{TemplateBinding ContentMargin}"
                                  Stretch="Fill"
                                  IsHitTestVisible="False">
                            </Path>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                                <Condition Binding="{Binding Path=UseMouseOverFill, RelativeSource={RelativeSource Self}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill" TargetName="pth" Value="{Binding Path=MouseOverFill, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                                <Condition Binding="{Binding Path=UseMouseOverBackground, RelativeSource={RelativeSource Self}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="border" Value="{Binding Path=MouseOverBackground, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <!--<Setter Property="Background" TargetName="border" Value="Red"/>-->
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region [  TabItem Style  ]-->
    <Style x:Key="TabItemStyle" TargetType="{x:Type TabItem}">

        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Margin" Value="0,0,0,0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid
                        x:Name="templateRoot"
                        Margin="1,0"
                        SnapsToDevicePixels="True">
                        <Border
                            x:Name="mainBorder"
                            Margin="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1" />
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="15,5"
                            HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"
                            VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"
                            Content="{TemplateBinding Header}"
                            ContentSource="Header"
                            ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#FFDB6D52" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="#FFDB6D52" />
                            <Setter Property="BorderBrush" Value="#FFD4D4D4" />
                            <Setter Property="Margin" Value="0,0,0,-1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region [  BlankTabItemStyle  ]-->
    <Style x:Key="BlankTabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Height" Value="0" />
    </Style>
    <!--#endregion-->

    <!--#region [  CloseableTabItem Style  ]-->

    <Style x:Key="CodeTabItemStyle" TargetType="{x:Type c:CloseableTabItem}">

        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Margin" Value="0,0,0,0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:CloseableTabItem}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition x:Name="ColumnC" Width="Auto" />
                            <ColumnDefinition x:Name="ColumnD" Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border
                            x:Name="mainBorder"
                            Grid.ColumnSpan="3"
                            Margin="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1,1,1,0" />
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="10,2,0,2"
                            HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"
                            VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"
                            Content="{TemplateBinding Header}"
                            ContentSource="Header"
                            ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <TextBlock
                            x:Name="TBChanged"
                            Grid.Column="1"
                            Margin="0,2,10,2"
                            Text="*" />
                        <corec:PathButton
                            x:Name="EndBtn"
                            Grid.Column="2"
                            ContentWidth="10"
                            ContentHeight="10"
                            ContentVerticalAlignment="Center"
                            ContentHorizontalAlignment="Center"
                            Margin="0,0,5,0"
                            Background="Transparent"
                            Fill="White"
                            Command="{x:Static cm:TabItemCommand.DeleteCommand}"
                            Data="{StaticResource EndPath}"
                            Visibility="Hidden" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FFD24726" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#FFD24726" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="BorderBrush" Value="#FFD4D4D4" />
                            <Setter TargetName="EndBtn" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FFD24726" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter TargetName="EndBtn" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="Saved" Value="True">
                            <Setter TargetName="TBChanged" Property="Text" Value="" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region [  TabItem (File) Style  ]-->
    <Style x:Key="FileTabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="Background" Value="#FFD24726" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderBrush" Value="#FFD24726" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid
                        x:Name="templateRoot"
                        Margin="1,0"
                        SnapsToDevicePixels="True">
                        <Border
                            x:Name="mainBorder"
                            Margin="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1,1,1,0" />
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="15,5"
                            HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"
                            VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"
                            Content="{TemplateBinding Header}"
                            ContentSource="Header"
                            ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FFF0623E" />
                        </Trigger>
                        <!--<Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderBrush" Value="#FFD4D4D4"/>
                            <Setter Property="Margin" Value="0,0,0,-1"/>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region [  GroupBox Style  ]-->
    <Style x:Key="GroupBoxStyle" TargetType="{x:Type GroupBox}">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Height" Value="105" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ContentPresenter Margin="5" />
                        <TextBlock
                            Grid.Row="1"
                            Text="{TemplateBinding Header}"
                            TextAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region [  ImageButton Style  ]-->
    <Style x:Key="ImageButtonStyle" TargetType="{x:Type c:ImageButton}">
        <Setter Property="MinWidth" Value="50" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="h:MouseDownHelper.IsEnabled" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Style.Triggers>
            <Trigger Property="ButtonMode" Value="Default">
                <Setter Property="MinHeight" Value="80" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type c:ImageButton}">
                            <Grid Background="Transparent">
                                <Border
                                    x:Name="SimpleButton"
                                    Grid.RowSpan="2"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}" />
                                <Grid Margin="{TemplateBinding Padding}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="45" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <Image
                                        x:Name="BtnImg"
                                        Width="40"
                                        Height="40"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        IsHitTestVisible="False"
                                        Source="{TemplateBinding BackImage}" />

                                    <!--  Margin="2,0"  -->
                                    <ContentPresenter
                                        Grid.Row="1"
                                        VerticalAlignment="Top"
                                        IsHitTestVisible="False"
                                        TextBlock.TextAlignment="Center" />
                                </Grid>


                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="SimpleButton" Property="Background" Value="#FCE4DC" />
                                </Trigger>
                                <Trigger Property="h:MouseDownHelper.IsMouseLeftButtonDown" Value="True">
                                    <Setter TargetName="SimpleButton" Property="Background" Value="#F5BA9D" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="Gray" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="ButtonMode" Value="ButtonWithDetails">
                <Setter Property="MinHeight" Value="80" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type c:ImageButton}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="2*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Image
                                    Width="50"
                                    Height="50"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center" />
                                <Border x:Name="SimpleButton" Background="{TemplateBinding Background}" />
                                <Border
                                    x:Name="ExButton"
                                    Grid.Row="1"
                                    Background="Aqua" />
                            </Grid>
                            <ControlTemplate.Triggers />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="ButtonMode" Value="OnlyImage">
                <Setter Property="MinHeight" Value="20" />
                <Setter Property="MinWidth" Value="20" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type c:ImageButton}">
                            <Grid>
                                <Border x:Name="SimpleButton" Background="{TemplateBinding Background}" />
                                <Image IsHitTestVisible="False" Source="{TemplateBinding BackImage}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="SimpleButton" Property="Background" Value="#FCE4DC" />
                                </Trigger>
                                <Trigger Property="h:MouseDownHelper.IsMouseLeftButtonDown" Value="True">
                                    <Setter TargetName="SimpleButton" Property="Background" Value="#F5BA9D" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="Gray" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="ButtonMode" Value="LongWidth">
                <Setter Property="MinHeight" Value="20" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type c:ImageButton}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Border
                                    x:Name="SimpleButton"
                                    Grid.ColumnSpan="2"
                                    Background="{TemplateBinding Background}" />

                                <Image
                                    Width="20"
                                    Height="20"
                                    HorizontalAlignment="Center"
                                    IsHitTestVisible="False"
                                    Source="{TemplateBinding BackImage}" />
                                <ContentPresenter
                                    x:Name="contentPresenter"
                                    Grid.Column="1"
                                    Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="Center"
                                    IsHitTestVisible="False"
                                    TextBlock.TextAlignment="{TemplateBinding TextAlignment}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="SimpleButton" Property="Background" Value="#FCE4DC" />
                                </Trigger>
                                <Trigger Property="h:MouseDownHelper.IsMouseLeftButtonDown" Value="True">
                                    <Setter TargetName="SimpleButton" Property="Background" Value="#F5BA9D" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="Gray" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->

    <!--#region [  RecentFileListViemItem Style  ]-->
    <Style x:Key="RecentFileListViewItemStyle" TargetType="{x:Type c:RecentFileListViewItem}">
        <Setter Property="Height" Value="45" />
        <Setter Property="MinHeight" Value="45" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:RecentFileListViewItem}">
                    <Grid
                        x:Name="mainGrid"
                        Background="{TemplateBinding Background}"
                        ContextMenu="{TemplateBinding ContextMenu}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="60" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <Rectangle
                            Margin="5"
                            Fill="White"
                            Stroke="LightGray"
                            StrokeThickness="1" />
                        <Image
                            Margin="5"
                            IsHitTestVisible="False"
                            Source="/PowerVBA;component/Resources/Icon/pptIcon.png" />

                        <Grid Grid.Column="1" Margin="10,5,0,5">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="4*" />
                                <RowDefinition Height="3*" />
                            </Grid.RowDefinitions>
                            <TextBlock
                                x:Name="TBFileName"
                                Grid.Row="0"
                                VerticalAlignment="Center"
                                FontSize="15"
                                Foreground="White"
                                IsHitTestVisible="False"
                                TextTrimming="CharacterEllipsis"
                                TextWrapping="NoWrap" />

                            <TextBlock
                                x:Name="TBFileLoc"
                                Grid.Row="1"
                                VerticalAlignment="Center"
                                FontSize="12"
                                Foreground="White"
                                IsHitTestVisible="False"
                                TextTrimming="CharacterEllipsis"
                                TextWrapping="NoWrap" />
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FFB83B1D" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region [  TabControl Style  ]-->
    <Style x:Key="TabControlStyle" TargetType="{x:Type TabControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid
                        x:Name="templateRoot"
                        ClipToBounds="true"
                        KeyboardNavigation.TabNavigation="Local"
                        SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                            <RowDefinition x:Name="RowDefinition1" Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.Resources>
                            <Style TargetType="{x:Type c:ScrollBarEx}">
                                <Setter Property="MinHeight" Value="1" />
                                <Setter Property="MaxHeight" Value="10000" />
                                <Setter Property="Height" Value="Auto" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type c:ScrollBarEx}">
                                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition x:Name="cd1" MaxWidth="12" />
                                                    <ColumnDefinition Width="0.00001*" />
                                                    <ColumnDefinition x:Name="cd2" MaxWidth="12" />
                                                </Grid.ColumnDefinitions>
                                                <Border
                                                    Grid.Row="1"
                                                    Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}" />
                                                <RepeatButton x:Name="PART_LineLeftButton" Command="{x:Static ScrollBar.LineLeftCommand}">
                                                    <TextBlock
                                                        FontSize="6"
                                                        IsHitTestVisible="False"
                                                        Text="◀" />
                                                </RepeatButton>
                                                <RepeatButton
                                                    x:Name="PART_LineRightButton"
                                                    Grid.Column="2"
                                                    Command="{x:Static ScrollBar.LineRightCommand}">
                                                    <TextBlock
                                                        FontSize="6"
                                                        IsHitTestVisible="False"
                                                        Text="▶" />
                                                </RepeatButton>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMaximum" Value="True">
                                                    <Setter Property="Background" Value="Black" />
                                                    <Setter TargetName="PART_LineRightButton" Property="Visibility" Value="Hidden" />
                                                    <Setter TargetName="cd2" Property="MaxWidth" Value="0" />
                                                </Trigger>
                                                <Trigger Property="Value" Value="0">
                                                    <Setter TargetName="PART_LineLeftButton" Property="Visibility" Value="Hidden" />
                                                    <Setter TargetName="cd1" Property="MaxWidth" Value="0" />
                                                </Trigger>

                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <Style TargetType="ScrollViewer">
                                <Setter Property="HorizontalContentAlignment" Value="Left" />
                                <Setter Property="VerticalContentAlignment" Value="Top" />
                                <Setter Property="VerticalScrollBarVisibility" Value="Disabled" />
                                <Setter Property="BorderThickness" Value="1" />
                                <Setter Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                            <GradientStop Offset="0" Color="#FFA3AEB9" />
                                            <GradientStop Offset="0.375" Color="#FF8399A9" />
                                            <GradientStop Offset="0.375" Color="#FF718597" />
                                            <GradientStop Offset="1" Color="#FF617584" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ScrollViewer">
                                            <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*" />
                                                </Grid.RowDefinitions>
                                                <ScrollContentPresenter
                                                    x:Name="PART_ScrollContentPresenter"
                                                    Grid.Row="0"
                                                    Grid.Column="0"
                                                    Margin="{TemplateBinding Padding}"
                                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                                    CanHorizontallyScroll="False"
                                                    CanVerticallyScroll="False"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}" />
                                                <c:ScrollBarEx
                                                    x:Name="PART_VerticalScrollBar"
                                                    Grid.Row="0"
                                                    Grid.Column="1"
                                                    AutomationProperties.AutomationId="VerticalScrollBar"
                                                    Cursor="Arrow"
                                                    Maximum="{TemplateBinding ScrollableHeight}"
                                                    Minimum="0"
                                                    ViewportSize="{TemplateBinding ActualHeight}"
                                                    Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                    Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                                <c:ScrollBarEx
                                                    x:Name="PART_HorizontalScrollBar"
                                                    Grid.Row="0"
                                                    Grid.Column="0"
                                                    Grid.ColumnSpan="3"
                                                    AutomationProperties.AutomationId="HorizontalScrollBar"
                                                    Cursor="Arrow"
                                                    Maximum="{TemplateBinding ScrollableWidth}"
                                                    Minimum="0"
                                                    Orientation="Horizontal"
                                                    ViewportSize="{TemplateBinding ViewportWidth}"
                                                    Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                    Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>

                        <Border
                            x:Name="contentPanel"
                            Grid.Row="1"
                            Grid.Column="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2"
                            KeyboardNavigation.TabNavigation="Local">
                            <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled">
                                <ContentPresenter
                                    x:Name="PART_SelectedContentHost"
                                    Margin="{TemplateBinding Padding}"
                                    ContentSource="SelectedContent"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                        </Border>


                        <ScrollViewer
                            Margin="-1"
                            HorizontalScrollBarVisibility="Auto"
                            VerticalScrollBarVisibility="Disabled">
                            <TabPanel
                                x:Name="headerPanel"
                                Grid.Row="0"
                                Grid.Column="0"
                                Margin="2,2,2,0"
                                Panel.ZIndex="1"
                                Background="Transparent"
                                IsItemsHost="true"
                                KeyboardNavigation.TabIndex="1" />
                        </ScrollViewer>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="headerPanel" Property="Grid.Row" Value="1" />
                            <Setter TargetName="contentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
                            <Setter TargetName="headerPanel" Property="Margin" Value="2,0,2,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="headerPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="contentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="headerPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="contentPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto" />
                            <Setter TargetName="ColumnDefinition1" Property="Width" Value="*" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                            <Setter TargetName="headerPanel" Property="Margin" Value="2,2,0,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter TargetName="headerPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="contentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="headerPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="contentPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ColumnDefinition0" Property="Width" Value="*" />
                            <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                            <Setter TargetName="headerPanel" Property="Margin" Value="0,2,2,2" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region [  ProjectTemplateButton Style  ]-->
    <Style x:Key="ProjectListViewItemStyle" TargetType="{x:Type c:LargeImageButton}">
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:LargeImageButton}">
                    <Grid Width="Auto" Height="180">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Rectangle
                            x:Name="BgRect"
                            Grid.RowSpan="2"
                            Grid.ColumnSpan="3"
                            Fill="White" />
                        <Rectangle
                            Margin="10"
                            Fill="White"
                            Stroke="#FFACACAD"
                            StrokeThickness="1" />
                        <Image
                            Width="202"
                            Height="113"
                            Margin="11"
                            Source="{TemplateBinding Source}" />
                        <TextBlock
                            Grid.Row="1"
                            Margin="10"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            FontWeight="Bold"
                            Text="{TemplateBinding Content}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BgRect" Property="Fill" Value="#FFFCE4DC" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BgRect" Property="Fill" Value="#FFFCCDB6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region [  ImageListViewItem Style  ]-->
    <Style x:Key="ImageListViewItemStyle" TargetType="{x:Type c:ImageListViewItem}">
        <Setter Property="Height" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:ImageListViewItem}">
                    <Border
                        x:Name="Bd"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="10" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Image Source="{TemplateBinding Source}" />
                            <ContentPresenter
                                Grid.Column="2"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#FFD24726" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region [  ToggleButton Style  ]-->
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill" Color="#FF595959" />
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke" Color="#FF262626" />
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke" Color="#FF27C7F7" />
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill" Color="#FFCCEEFB" />
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="#FF1CC4F7" />
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill" Color="#FF82DFFB" />
    <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z" />
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke" Color="#FF818181" />

    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        Width="16"
                        Height="16"
                        Padding="5,5,5,5"
                        Background="Transparent">
                        <Path
                            x:Name="ExpandPath"
                            Data="{StaticResource TreeArrow}"
                            Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}"
                            Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}">
                            <Path.RenderTransform>
                                <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ExpandPath" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}" />
                            <Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}" />
                            <Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}" />
                            <Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region [  ImageTreeViewItem Style  ]-->
    <Style x:Key="ImageTreeViewItemStyle" TargetType="{x:Type c:ImageTreeViewItem}">
        <Setter Property="ImageHeight" Value="20"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:ImageTreeViewItem}">
                    <ControlTemplate.Resources>
                        <c:LeftMarginMultiplierConverter Length="19" x:Key="lengthConverter"/>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid Background="{TemplateBinding Background}">
                            
                            <Grid Margin="{Binding Converter={StaticResource lengthConverter}, RelativeSource={RelativeSource TemplatedParent}}" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" MinWidth="19" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <ToggleButton
                                    x:Name="Expander"
                                    ClickMode="Press"
                                    IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{StaticResource ExpandCollapseToggleStyle}" />
                                <Border
                                    x:Name="Bd"
                                    Grid.Column="1"
                                    Padding="{TemplateBinding Padding}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="true">
                                    <Grid >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="10" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Image Source="{TemplateBinding Source}" Height="{TemplateBinding ImageHeight}"/>
                                        <ContentPresenter
                                    x:Name="PART_Header"
                                    Grid.Column="3"
                                    
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="Center"
                                    ContentSource="Header"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                </Border>
                            </Grid>
                        </Grid>
                        <ItemsPresenter
                            x:Name="ItemsHost"
                            Grid.Row="1"
                            Grid.ColumnSpan="2"
                            VerticalAlignment="Stretch"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="#FFD24726"/>
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Gray"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region [  ExampleBox Style  ]-->

    <Style TargetType="{x:Type c:ExampleBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:ExampleBox}">
                    <Grid Margin="0,10,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <TextBlock Margin="0,0,0,5" FontWeight="Bold">
                            <Run Text="{TemplateBinding Title}" />
                            &gt;&gt;</TextBlock>
                        <Rectangle
                            Grid.Row="1"
                            Fill="LightGray"
                            Stroke="Black" />
                        <TextBlock
                            Grid.Row="1"
                            Margin="10"
                            Text="{TemplateBinding Text}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->
    
    <!--#region [  Button Style  ]-->

    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="h:MouseDownHelper.IsEnabled" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="{TemplateBinding Width}" 
                          Height="{TemplateBinding Height}"
                          Background="{TemplateBinding Background}">
                        <ContentPresenter Content="{TemplateBinding Content}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"
                                          RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FFFCE4DC"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#FFF5BA9D"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->
    

</ResourceDictionary>